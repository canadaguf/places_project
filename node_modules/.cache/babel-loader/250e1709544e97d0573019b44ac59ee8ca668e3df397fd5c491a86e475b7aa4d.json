{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ilya\\\\places_project\\\\src\\\\scenes\\\\global\\\\Topbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { AppBar, Toolbar, Typography, Button, IconButton } from '@mui/material';\nimport { ColorModeContext } from '../../theme/useMode'; // Import ColorModeContext\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Topbar = ({\n  handleDrawerToggle,\n  isLoggedIn,\n  handleLogout\n}) => {\n  _s();\n  const {\n    toggleColorMode\n  } = useContext(ColorModeContext); // Use toggleColorMode from context\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        edge: \"start\",\n        color: \"inherit\",\n        \"aria-label\": \"menu\",\n        onClick: handleDrawerToggle,\n        children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"div\",\n        sx: {\n          flexGrow: 1\n        },\n        children: \"\\u0418\\u043D\\u0442\\u0435\\u0440\\u0435\\u0441\\u043D\\u044B\\u0435 \\u043C\\u0435\\u0441\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"inherit\",\n        onClick: toggleColorMode,\n        children: \"\\u0422\\u0435\\u043C\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(Button, {\n        color: \"inherit\",\n        component: Link,\n        to: \"/register\",\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(Button, {\n        color: \"inherit\",\n        onClick: handleLogout,\n        children: \"\\u0412\\u044B\\u0445\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        color: \"inherit\",\n        component: Link,\n        to: \"/login\",\n        children: \"\\u0412\\u0445\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(Topbar, \"XKQy20rU0FDYzeOHblSGMtYwydI=\");\n_c = Topbar;\nexport default Topbar;\nvar _c;\n$RefreshReg$(_c, \"Topbar\");","map":{"version":3,"names":["React","useContext","AppBar","Toolbar","Typography","Button","IconButton","ColorModeContext","MenuIcon","Link","jsxDEV","_jsxDEV","Topbar","handleDrawerToggle","isLoggedIn","handleLogout","_s","toggleColorMode","position","children","edge","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","sx","flexGrow","to","_c","$RefreshReg$"],"sources":["C:/Users/Ilya/places_project/src/scenes/global/Topbar.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { AppBar, Toolbar, Typography, Button, IconButton } from '@mui/material';\r\nimport { ColorModeContext } from '../../theme/useMode'; // Import ColorModeContext\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Topbar = ({ handleDrawerToggle, isLoggedIn, handleLogout }) => {\r\n  const { toggleColorMode } = useContext(ColorModeContext); // Use toggleColorMode from context\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleDrawerToggle}>\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n          Интересные места\r\n        </Typography>\r\n        <Button color=\"inherit\" onClick={toggleColorMode}>\r\n          Тема\r\n        </Button>\r\n\r\n        {/* Show Registration link only if the user is not logged in */}\r\n        {!isLoggedIn && (\r\n          <Button color=\"inherit\" component={Link} to=\"/register\">\r\n            Регистрация\r\n          </Button>\r\n        )}\r\n\r\n        {/* Show Login/Logout button based on the login state */}\r\n        {isLoggedIn ? (\r\n          <Button color=\"inherit\" onClick={handleLogout}>\r\n            Выход\r\n          </Button>\r\n        ) : (\r\n          <Button color=\"inherit\" component={Link} to=\"/login\">\r\n            Вход\r\n          </Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Topbar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,MAAM,EAAEC,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAC/E,SAASC,gBAAgB,QAAQ,qBAAqB,CAAC,CAAC;AACxD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAC;EAAEC,kBAAkB;EAAEC,UAAU;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAM;IAAEC;EAAgB,CAAC,GAAGhB,UAAU,CAACM,gBAAgB,CAAC,CAAC,CAAC;;EAE1D,oBACEI,OAAA,CAACT,MAAM;IAACgB,QAAQ,EAAC,QAAQ;IAAAC,QAAA,eACvBR,OAAA,CAACR,OAAO;MAAAgB,QAAA,gBACNR,OAAA,CAACL,UAAU;QAACc,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC,SAAS;QAAC,cAAW,MAAM;QAACC,OAAO,EAAET,kBAAmB;QAAAM,QAAA,eACrFR,OAAA,CAACH,QAAQ;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACbf,OAAA,CAACP,UAAU;QAACuB,OAAO,EAAC,IAAI;QAACC,SAAS,EAAC,KAAK;QAACC,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAE,CAAE;QAAAX,QAAA,EAAC;MAE9D;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbf,OAAA,CAACN,MAAM;QAACgB,KAAK,EAAC,SAAS;QAACC,OAAO,EAAEL,eAAgB;QAAAE,QAAA,EAAC;MAElD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAGR,CAACZ,UAAU,iBACVH,OAAA,CAACN,MAAM;QAACgB,KAAK,EAAC,SAAS;QAACO,SAAS,EAAEnB,IAAK;QAACsB,EAAE,EAAC,WAAW;QAAAZ,QAAA,EAAC;MAExD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT,EAGAZ,UAAU,gBACTH,OAAA,CAACN,MAAM;QAACgB,KAAK,EAAC,SAAS;QAACC,OAAO,EAAEP,YAAa;QAAAI,QAAA,EAAC;MAE/C;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAETf,OAAA,CAACN,MAAM;QAACgB,KAAK,EAAC,SAAS;QAACO,SAAS,EAAEnB,IAAK;QAACsB,EAAE,EAAC,QAAQ;QAAAZ,QAAA,EAAC;MAErD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEb,CAAC;AAACV,EAAA,CApCIJ,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AAsCZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}